{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onChangeFiler","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","console","log","expenses","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","showForm","setShowForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","changeFormStatus","onClick","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88c521b0.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return (<div className={classes}>{props.children}</div>);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFiler(event.target.value);\r\n  };  \r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler} value={props.selected}>\r\n          <option value='0'>All</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>  \r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card';\r\nimport React from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <li className=\"expense-list\">\r\n    <Card className=\"expense-item\">\r\n       <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expense.</h2>\r\n    } \r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense)=> (\r\n            <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}> \r\n            </ExpenseItem>))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar'\r\nimport './Chart.css'\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return <div className=\"chart\">\r\n        {props.dataPoints.map(\r\n            dataPoint => (\r\n            <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label}>\r\n\r\n            </ChartBar>))}\r\n    </div>\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    console.log(props.expenses);\r\n    const chartDataPoints = [\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0}\r\n    ];\r\n    \r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}></Chart>;\r\n};\r\n\r\n\r\n\r\nexport default ExpensesChart;","import Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport React, {useState} from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('0');\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  let filteredExpenses = filteredYear === '0' ? props.items : props.items.filter((expense=>{\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  }))\r\n\r\n  return (\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter onChangeFiler={filterChangeHandler} selected={filteredYear}></ExpensesFilter>\r\n        <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n        <ExpensesList items={filteredExpenses}></ExpensesList>\r\n      </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [showForm, setShowForm] = useState(true);\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState(''); \r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n   \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        changeFormStatus();\r\n    }\r\n\r\n    function changeFormStatus() {\r\n        if (showForm === false) setShowForm(true);\r\n        else setShowForm(false);\r\n    }\r\n\r\n    if (showForm === true) {\r\n        return (\r\n            <button onClick={changeFormStatus}>Add new expense</button>\r\n        );\r\n    }\r\n\r\n    return (  \r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}></input>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}></input>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}></input>\r\n                </div>\r\n            </div>  \r\n            <div className='new-expense__actions'>\r\n                <button type=\"submit\">Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction NewExpense (props) {\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  { title: \"Car Insurance1\", amount: 291.67, date: new Date(2021, 1, 28) },\n  { title: \"Car Insurance2\", amount: 292.67, date: new Date(2021, 2, 28) },\n  { title: \"Car Insurance3\", amount: 293.67, date: new Date(2021, 3, 28) }\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses=>{return [expense,...prevExpenses]});  \n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  ); \n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}