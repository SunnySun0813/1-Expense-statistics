{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/SASun/OneDrive/Desktop/React/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import React from'react';import Chart from'../Chart/Chart';import{jsx as _jsx}from\"react/jsx-runtime\";var ExpensesChart=function ExpensesChart(props){console.log(props.expenses);var chartDataPoints=[{label:'Jan',value:0},{label:'Feb',value:0},{label:'Mar',value:0},{label:'Apr',value:0},{label:'May',value:0},{label:'Jun',value:0},{label:'Jul',value:0},{label:'Aug',value:0},{label:'Sep',value:0},{label:'Oct',value:0},{label:'Nov',value:0},{label:'Dec',value:0}];var _iterator=_createForOfIteratorHelper(props.expenses),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var expense=_step.value;var expenseMonth=expense.date.getMonth();chartDataPoints[expenseMonth].value+=expense.amount;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsx(Chart,{dataPoints:chartDataPoints});};export default ExpensesChart;","map":{"version":3,"names":["React","Chart","ExpensesChart","props","console","log","expenses","chartDataPoints","label","value","expense","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/SASun/OneDrive/Desktop/React/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    console.log(props.expenses);\r\n    const chartDataPoints = [\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0}\r\n    ];\r\n    \r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}></Chart>;\r\n};\r\n\r\n\r\n\r\nexport default ExpensesChart;"],"mappings":"mJAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,MAAK,KAAM,gBAAgB,CAAC,2CAEnC,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAGC,KAAK,CAAI,CAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC,CAC3B,GAAMC,gBAAe,CAAG,CACpB,CAACC,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACrB,CAACD,KAAK,CAAC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CACxB,CAAC,yCAGoBN,KAAK,CAACG,QAAQ,YAApC,+CAAsC,IAA3BI,QAAO,aACd,GAAMC,aAAY,CAAGD,OAAO,CAACE,IAAI,CAACC,QAAQ,EAAE,CAC5CN,eAAe,CAACI,YAAY,CAAC,CAACF,KAAK,EAAIC,OAAO,CAACI,MAAM,CACzD,CAAC,qDAED,mBAAO,KAAC,KAAK,EAAC,UAAU,CAAEP,eAAgB,EAAS,CACvD,CAAC,CAID,cAAeL,cAAa"},"metadata":{},"sourceType":"module"}